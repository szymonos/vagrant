# -*- mode: ruby -*-
# vi: set ft=ruby :
# *Variables
box          = "opensuse/Tumbleweed.x86_64"
provider     = "libvirt"
boxname      = "tumbleweed"
hostname     = "suse"
# network configuration
ip_addr      = "192.168.33.5"
# vm configuration
memory       = 8192
cpu          = 4
# vagrant data location
vagrant_home ="/mnt/ext/vagrant.d"
ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip

# *Scripts
script_install_packages = <<~SCRIPT
  zypper in -y ripgrep btop openssl nano jq
SCRIPT

# *VM provisioning
Vagrant.configure("2") do |config|
  # common config
  config.vm.provider provider do |v|
    v.memory = memory
    v.cpus = cpu
  end
  config.vm.define boxname do |node|
    # node triggers
    node.trigger.after :reload do |trigger|
      trigger.info = "Add vagrant configuration to ssh config file..."
      trigger.run = { privileged: "false", path: "../../.assets/trigger/set_ssh_config.sh", :args => [ip_addr] }
    end
    # node setup
    node.vm.box = box
    node.vm.hostname = hostname
    node.vm.network "private_network", ip: ip_addr
    # node provision
    node.vm.provision "shell", name: "install packages...", inline: script_install_packages
    node.vm.provision "shell", name: "install exa...", path: "../../.assets/provision/install_exa.sh"
    node.vm.provision "shell", name: "install bat...", path: "../../.assets/provision/install_bat.sh"
    node.vm.provision "shell", name: "install yq", path: "../../.assets/provision/install_yq.sh"
    # ~setting up profiles
    node.vm.provision "shell", name: "install oh-my-posh...", path: "../../.assets/provision/install_omp.sh"
    node.vm.provision "shell", name: "install PowerShell...", path: "../../.assets/provision/install_pwsh.sh"
    node.vm.provision "file", source: "../../.assets/config", destination: "/tmp/"
    node.vm.provision "shell", name: "set up PS for all users...", path: "../../.assets/provision/setup_profiles_allusers.sh"
    node.vm.provision "shell", name: "set up user profile...", path: "../../.assets/provision/setup_profiles_user.sh", privileged: false
    node.vm.provision "shell",
      name: "add ssh public key...",
      path: "../../.assets/provision/set_authorized_keys.sh", :args => [ssh_pub_key],
      privileged: false
    # ~reload vm
    node.vm.provision :reload
  end
end
